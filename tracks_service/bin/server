#!/usr/bin/env ruby

# frozen_string_literal: true

bin_path = File.expand_path(__dir__)
lib_path = File.join(File.expand_path(__dir__), '..', 'lib')

$LOAD_PATH.unshift(bin_path) unless $LOAD_PATH.include?(bin_path)
$LOAD_PATH.unshift(lib_path) unless $LOAD_PATH.include?(lib_path)

require 'grpc'
require 'tracks_service'
require 'tracks_service_pb'
require 'tracks_service_services_pb'

$stdout.sync = true

class Server < TracksService::Service::Service
  def track(request, _call)
    result = TracksService.track(request)

    return TracksService::TrackResponse.new(success: false, error: result.error) if result.failure?

    track = result.value

    album = TracksService::Album.new(
      id: track.album.id,
      name: track.album.name,
      url: track.album.url,
      image_url: track.album.image_url
    )

    artists = track.artists.collect { |it| TracksService::Artist.new(id: it.id, name: it.name, url: it.url) }

    value = TracksService::Track.new(
      id: track.id,
      name: track.name,
      url: track.url,
      album: album,
      artists: artists
    )

    TracksService::TrackResponse.new(success: true, value: value)
  end
end

s = GRPC::RpcServer.new
s.add_http2_port('0.0.0.0:3000', :this_port_is_insecure)
s.handle(Server)
s.run_till_terminated_or_interrupted([1, 'int', 'SIGQUIT'])
